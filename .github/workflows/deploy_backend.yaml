name: Build and Deploy backend for app

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "app/backend/**"
      - ".github/composite/common_build_setup/**"
      - ".github/composite/deploy_ecs_service/**"
      - ".github/composite/deploy_lambda_service/**"
      - ".github/task_definitions/backend/**"
      - ".github/workflows/deploy_backend.yaml"

env:
  # Global environment variables
  AWS_REGION: "eu-central-1"
  ECS_CLUSTER: HandsOfHope

  # Service paths
  LAYER_SERVICE_PATH: app/backend/services/layers
  LAYER_SERVICE_NAME: layers

  SERVICE1_SERVICE_PATH: app/backend/services/service1
  SERVICE1_SERVICE_NAME: service1

  # ECS setup for the docs service
  PROD_DOCS_ECR_REPOSITORY: hands-of-hope-prod/docs
  PROD_DOCS_ECS_SERVICE: HandsOfHope-Docs-Prod
  PROD_DOCS_ECS_TASK_DEFINITION: .github/task_definitions/backend/HandsOfHope-Docs-Prod.json
  PROD_DOCS_CONTAINER_NAME: hands-of-hope-prod-docs

  DEVELOP_DOCS_ECR_REPOSITORY: hands-of-hope-develop/docs
  DEVELOP_DOCS_ECS_SERVICE: HandsOfHope-Docs-Develop
  DEVELOP_DOCS_ECS_TASK_DEFINITION: .github/task_definitions/backend/HandsOfHope-Docs-Develop.json
  DEVELOP_DOCS_CONTAINER_NAME: hands-of-hope-develop-docs

permissions:
  id-token: write
  contents: read

jobs:
  disabled_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Waiting 2 seconds
        run: sleep 2

  # deploy_layer_develop:
  #   if: github.ref == 'refs/heads/develop'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     - name: Deploy layer
  #       uses: ./.github/composite/deploy_lambda_service
  #       with:
  #         service_path: ${{ env.LAYER_SERVICE_PATH }}
  #         service_name: ${{ env.LAYER_SERVICE_NAME }}
  #         stage_name: "develop"
  #         continue-on-error: true

  # deploy_layer_prod:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     - name: Deploy layer
  #       uses: ./.github/composite/deploy_lambda_service
  #       with:
  #         service_path: ${{ env.LAYER_SERVICE_PATH }}
  #         service_name: ${{ env.LAYER_SERVICE_NAME }}
  #         stage_name: "prod"
  #         continue-on-error: true

  # deploy_service1_develop:
  #   if: github.ref == 'refs/heads/develop'
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy_layer_develop
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     - name: Deploy Service
  #       uses: ./.github/composite/deploy_lambda_service
  #       with:
  #         service_path: ${{ env.SERVICE1_SERVICE_PATH }}
  #         service_name: ${{ env.SERVICE1_SERVICE_NAME }}
  #         layer_stack_name: ${{ env.LAYER_SERVICE_NAME }}
  #         stage_name: "develop"
  #         continue-on-error: true

  # deploy_service1_prod:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy_layer_prod
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     - name: Deploy Service
  #       uses: ./.github/composite/deploy_lambda_service
  #       with:
  #         service_path: ${{ env.SERVICE1_SERVICE_PATH }}
  #         service_name: ${{ env.SERVICE1_SERVICE_NAME }}
  #         layer_stack_name: ${{ env.LAYER_SERVICE_NAME }}
  #         stage_name: "prod"
  #         continue-on-error: true

  # deploy_docs_develop:
  #   if: github.ref == 'refs/heads/develop'
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy_service1_develop
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     # Deploy
  #     - name: Deploy to ECS
  #       uses: ./.github/composite/deploy_ecs_service
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}
  #         ecr_repository: ${{ env.DEVELOP_DOCS_ECR_REPOSITORY }}
  #         ecs_cluster: ${{ env.ECS_CLUSTER }}
  #         ecs_service: ${{ env.DEVELOP_DOCS_ECS_SERVICE }}
  #         ecs_task_definition: ${{ env.DEVELOP_DOCS_ECS_TASK_DEFINITION }}
  #         container_name: ${{ env.DEVELOP_DOCS_CONTAINER_NAME }}
  #         service_dir: app/backend/docs
  #         generate_docs_stage_name: develop

  # deploy_docs_prod:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy_service1_prod
  #   steps:
  #     # Setup
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Run Dependencies Setup
  #       uses: ./.github/composite/common_build_setup
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}

  #     # Deploy
  #     - name: Deploy to ECS
  #       uses: ./.github/composite/deploy_ecs_service
  #       with:
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ env.AWS_REGION }}
  #         ecr_repository: ${{ env.PROD_DOCS_ECR_REPOSITORY }}
  #         ecs_cluster: ${{ env.ECS_CLUSTER }}
  #         ecs_service: ${{ env.PROD_DOCS_ECS_SERVICE }}
  #         ecs_task_definition: ${{ env.PROD_DOCS_ECS_TASK_DEFINITION }}
  #         container_name: ${{ env.PROD_DOCS_CONTAINER_NAME }}
  #         service_dir: app/backend/docs
  #         generate_docs_stage_name: prod
