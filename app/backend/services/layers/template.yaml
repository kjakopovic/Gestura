AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  StageName:
    Type: String
    Description: Stage of app deployment (develop, prod)
    Default: prod

Resources:
  CommonLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content: ./common/
      CompatibleRuntimes:
        - python3.12
    Metadata:
      BuildMethod: python3.12

  # Apis
  UsersApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "UsersApi-${StageName}"
      StageName: !Ref StageName
      Auth:
        ApiKeyRequired: false

  LearningApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "LearningApi-${StageName}"
      StageName: !Ref StageName
      Auth:
        ApiKeyRequired: false

  # Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "users-${StageName}"
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: username-index
          KeySchema:
            - AttributeName: username
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "tasks-${StageName}"
      AttributeDefinitions:
        - AttributeName: taskId
          AttributeType: S
        - AttributeName: section
          AttributeType: N
      KeySchema:
        - AttributeName: taskId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: section-index
          KeySchema:
            - AttributeName: section
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # Healthcheck
  LearningHealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: healthchecks/learning/
      Handler: app.lambda_handler
      Runtime: python3.12
      Layers:
        - !Ref CommonLayer
      Architectures:
        - x86_64
      Events:
        LearningHealthCheckEndpoint:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref LearningApi

  UsersHealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: healthchecks/users/
      Handler: app.lambda_handler
      Runtime: python3.12
      Layers:
        - !Ref CommonLayer
      Architectures:
        - x86_64
      Events:
        UsersHealthCheckEndpoint:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref UsersApi

Outputs:
  CommonLayerArn:
    Description: "ARN of the Layer with all the common code"
    Value: !Ref CommonLayer
    Export:
      Name: !Sub "${AWS::StackName}-CommonLayerArn"
  UsersTable:
    Description: "DynamoDB table for users"
    Value: !Ref UsersTable
    Export:
      Name: !Sub "${AWS::StackName}-UsersTable"
  TasksTable:
    Description: "DynamoDB table for tasks"
    Value: !Ref TasksTable
    Export:
      Name: !Sub "${AWS::StackName}-TasksTable"
  UsersApi:
    Description: "API Gateway endpoint URL for Users API"
    Value: !Ref UsersApi
    Export:
      Name: !Sub "${AWS::StackName}-UsersApi"
  LearningApi:
    Description: "API Gateway endpoint URL for Learning API"
    Value: !Ref LearningApi
    Export:
      Name: !Sub "${AWS::StackName}-LearningApi"
  UsersApiUrl:
    Description: "API Gateway endpoint URL for users microservice apis"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
  LearningApiUrl:
    Description: "API Gateway endpoint URL for learning microservice apis"
    Value: !Sub "https://${LearningApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
